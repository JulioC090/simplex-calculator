{
  "version": 3,
  "sources": ["../../build/dist/ObjectiveFunctionInput.js", "../../build/dist/RestrictionsInputs.js", "../../build/dist/InputsManager.js", "../../build/dist/SimpexCalculator.js", "../../build/dist/SimplexTable.js", "../../build/dist/SolutionList.js", "../../build/dist/Table.js", "../../build/dist/index.js"],
  "sourcesContent": ["export class ObjectiveFunctionInput {\n  constructor(inputId, inputsManager) {\n    this.variableInputs = [];\n    this.numberOfVariables = 0;\n    this.element = document.getElementById(inputId);\n    if (!this.element) {\n      throw new Error(`ObjectiveFunctionInput: no element was found with id '${inputId}'`);\n    }\n    this.expressionElement = this.element.querySelector(\".form__expression\");\n    if (!this.expressionElement) {\n      throw new Error(`ObjectiveFunctionInput: expression element not found'`);\n    }\n    this.addButton = this.element.querySelector(\".form__input__controls .controls__add\");\n    if (!this.addButton) {\n      throw new Error(`ObjectiveFunctionInput: add button not found'`);\n    }\n    this.addButton.addEventListener(\"click\", () => this.addVariableInput());\n    this.removeButton = this.element.querySelector(\".form__input__controls .controls__remove\");\n    if (!this.removeButton) {\n      throw new Error(`ObjectiveFunctionInput: remove button not found'`);\n    }\n    this.removeButton.addEventListener(\"click\", () => this.removeVariableInput());\n    this.inputsManager = inputsManager;\n    this.variableInputs.push(this.createVariableInput());\n    this.numberOfVariables++;\n    this.render();\n  }\n  getValues() {\n    const values = [];\n    this.variableInputs.map((input) => {\n      if (input.value) {\n        values.push(Number(input.value));\n      } else {\n        values.push(0);\n      }\n    });\n    return values;\n  }\n  createVariableInput() {\n    const input = document.createElement(\"input\");\n    input.placeholder = \"0\";\n    input.type = \"number\";\n    return input;\n  }\n  addVariableInput() {\n    this.variableInputs.push(this.createVariableInput());\n    this.numberOfVariables++;\n    this.inputsManager.addVariable();\n    this.render();\n  }\n  removeVariableInput() {\n    if (this.numberOfVariables <= 1) {\n      return;\n    }\n    this.variableInputs.pop();\n    this.numberOfVariables--;\n    this.inputsManager.decreaseVariable();\n    this.render();\n  }\n  render() {\n    this.expressionElement.innerHTML = \"Z = \";\n    this.variableInputs.map((value, index) => {\n      this.expressionElement.append(value);\n      this.expressionElement.append(` X${index + 1} `);\n      if (index != this.numberOfVariables - 1) {\n        this.expressionElement.append(\"+ \");\n      }\n    });\n  }\n}\n", "export class RestrictionsInputs {\n  constructor(restrictionsInputId) {\n    this.restrictionsInputs = [];\n    this.numberOfRestrictions = 0;\n    this.numberOfVariables = 2;\n    this.element = document.getElementById(restrictionsInputId);\n    if (!this.element) {\n      throw new Error(`RestrictionsInputs: no element was found with id '${restrictionsInputId}'`);\n    }\n    this.restrictionsElement = this.element.querySelector(\".form__restrictions\");\n    if (!this.restrictionsElement) {\n      throw new Error(`RestrictionsInputs: restrictions element not found'`);\n    }\n    this.addButton = this.element.querySelector(\".form__input__controls .controls__add\");\n    if (!this.addButton) {\n      throw new Error(`RestrictionsInputs: add button not found'`);\n    }\n    this.addButton.addEventListener(\"click\", () => this.addRestrictionInput());\n    this.removeButton = this.element.querySelector(\".form__input__controls .controls__remove\");\n    if (!this.removeButton) {\n      throw new Error(`RestrictionsInputs: remove button not found'`);\n    }\n    this.removeButton.addEventListener(\"click\", () => this.removeRestrictionInput());\n    this.addRestrictionInput();\n    this.render();\n  }\n  getValues() {\n    const values = [];\n    this.restrictionsInputs.map((restriction) => {\n      const restrictionValues = [];\n      restriction.map((input) => {\n        if (input.value) {\n          restrictionValues.push(Number(input.value));\n        } else {\n          restrictionValues.push(0);\n        }\n      });\n      values.push(restrictionValues);\n    });\n    return values;\n  }\n  createVariableInput() {\n    const input = document.createElement(\"input\");\n    input.placeholder = \"0\";\n    input.type = \"number\";\n    return input;\n  }\n  addRestrictionInput() {\n    const inputs = [];\n    for (let i = 0; i < this.numberOfVariables; i++) {\n      inputs.push(this.createVariableInput());\n    }\n    this.restrictionsInputs.push(inputs);\n    this.numberOfRestrictions++;\n    this.render();\n  }\n  removeRestrictionInput() {\n    if (this.numberOfRestrictions <= 1) {\n      return;\n    }\n    this.restrictionsInputs.pop();\n    this.numberOfRestrictions--;\n    this.render();\n  }\n  addVariable() {\n    this.numberOfVariables++;\n    this.restrictionsInputs.map((restriction) => {\n      restriction.push(this.createVariableInput());\n    });\n    this.render();\n  }\n  removeVariable() {\n    if (this.numberOfVariables <= 2) {\n      return;\n    }\n    this.numberOfVariables--;\n    this.restrictionsInputs.map((restriction) => {\n      restriction.pop();\n    });\n    this.render();\n  }\n  render() {\n    this.restrictionsElement.innerHTML = \"\";\n    this.restrictionsInputs.map((restriction) => {\n      const restrictionDiv = document.createElement(\"div\");\n      restrictionDiv.classList.add(\"form__expression\");\n      restriction.map((input, index) => {\n        restrictionDiv.append(input);\n        if (index < this.numberOfVariables - 2) {\n          restrictionDiv.append(` X${index + 1} `);\n          restrictionDiv.append(\"+ \");\n        } else if (index < this.numberOfVariables - 1) {\n          restrictionDiv.append(` X${index + 1} `);\n          restrictionDiv.append(\"â‰¤ \");\n        }\n      });\n      this.restrictionsElement.append(restrictionDiv);\n    });\n  }\n}\n", "import {ObjectiveFunctionInput} from \"./ObjectiveFunctionInput.js\";\nimport {RestrictionsInputs} from \"./RestrictionsInputs.js\";\nexport class InputsManager {\n  constructor(objectiveFunctionInputId, restrictionsInputId) {\n    this.objectiveFunctionInput = new ObjectiveFunctionInput(objectiveFunctionInputId, this);\n    this.restrictionsInput = new RestrictionsInputs(restrictionsInputId);\n  }\n  getValues() {\n    const values = [];\n    const inversedObjectiveFunctionValues = this.objectiveFunctionInput.getValues().map((value) => -value);\n    values.push([1, ...inversedObjectiveFunctionValues, 0]);\n    this.restrictionsInput.getValues().map((value) => {\n      values.push([0, ...value]);\n    });\n    return values;\n  }\n  addVariable() {\n    this.restrictionsInput.addVariable();\n  }\n  decreaseVariable() {\n    this.restrictionsInput.removeVariable();\n  }\n}\n", "export class SimplexCalculator {\n  constructor(table) {\n    this.isIndeterminate = false;\n    this.simplexTable = table;\n  }\n  getSimplexTable() {\n    return this.simplexTable;\n  }\n  isSolved() {\n    let line = this.simplexTable.getLine(0);\n    let isSolved = true;\n    line.map((value) => {\n      if (value < 0) {\n        isSolved = false;\n      }\n    });\n    return isSolved;\n  }\n  iterate() {\n    let pivoLineIndex = this.simplexTable.getPivoLineIndex();\n    if (pivoLineIndex == 0) {\n      this.isIndeterminate = true;\n      console.log(this.isIndeterminate);\n      return;\n    }\n    let baseVariableCollumnIndex = this.simplexTable.getBaseVariableCollumnIndex();\n    let pivoElement = this.simplexTable.getElement(pivoLineIndex, baseVariableCollumnIndex);\n    let newPivoLine = this.simplexTable.getLine(pivoLineIndex).map((value) => {\n      return value / pivoElement;\n    });\n    this.simplexTable.setLine(pivoLineIndex, newPivoLine);\n    this.simplexTable.getTable().forEach((line, index) => {\n      if (index === pivoLineIndex)\n        return;\n      let normalize = -line[baseVariableCollumnIndex] / newPivoLine[baseVariableCollumnIndex];\n      let newLine = line.map((value, index2) => {\n        return newPivoLine[index2] * normalize + value;\n      });\n      this.simplexTable.setLine(index, newLine);\n    });\n  }\n  solve() {\n    while (!this.isSolved() && !this.isIndeterminate) {\n      this.iterate();\n    }\n  }\n  hasSolution() {\n    return !this.isIndeterminate;\n  }\n  getSolution() {\n    const table = this.simplexTable.getTable();\n    const solution = {\n      basic: [],\n      notBasic: []\n    };\n    for (let j = 0; j < table[0].length - 1; j++) {\n      let isBasic = true;\n      let index = 0;\n      let amountOfNumber = 0;\n      for (let i = 0; i < table.length; i++) {\n        if (table[i][j] !== 0) {\n          amountOfNumber++;\n        }\n        if (table[i][j] === 1) {\n          index = i;\n        }\n        if (table[i][j] > 1 || amountOfNumber > 1) {\n          isBasic = false;\n          break;\n        }\n      }\n      if (isBasic) {\n        solution.basic.push({\n          variable: this.simplexTable.getHeader()[j],\n          value: this.simplexTable.getBValue(index)\n        });\n      } else {\n        solution.notBasic.push({\n          variable: this.simplexTable.getHeader()[j],\n          value: 0\n        });\n      }\n    }\n    return solution;\n  }\n}\n", "export class SimplexTable {\n  constructor(matrix) {\n    this.header = [];\n    this.table = [];\n    this.numberOfVariables = 0;\n    this.numberOfLooseness = 0;\n    this.numberOfVariables = matrix[0].length - 2;\n    this.numberOfLooseness = matrix.length - 1;\n    matrix.forEach((currentLine, index) => {\n      let currentTableLine = [currentLine[0]];\n      for (let i = 1; i < this.numberOfVariables + 1; i++) {\n        currentTableLine.push(currentLine[i]);\n      }\n      for (let i = 0; i < this.numberOfLooseness; i++) {\n        if (index - 1 === i) {\n          currentTableLine.push(1);\n        } else {\n          currentTableLine.push(0);\n        }\n      }\n      currentTableLine.push(currentLine[currentLine.length - 1]);\n      this.table.push(currentTableLine);\n    });\n    this.header.push(\"z\");\n    for (let i = 0; i < this.numberOfVariables; i++) {\n      this.header.push(`x${i + 1}`);\n    }\n    for (let i = 0; i < this.numberOfLooseness; i++) {\n      this.header.push(`f${i + 1}`);\n    }\n    this.header.push(\"b\");\n  }\n  getNumberOfVariables() {\n    return this.numberOfVariables;\n  }\n  getNumberOfLooseness() {\n    return this.numberOfLooseness;\n  }\n  getHeader() {\n    return this.header;\n  }\n  getLine(index) {\n    return this.table[index];\n  }\n  setLine(index, line) {\n    this.table[index] = line;\n  }\n  getCollumn(index) {\n    let collumn = [];\n    this.table.map((line) => {\n      collumn.push(line[index]);\n    });\n    return collumn;\n  }\n  getElement(line, collumn) {\n    return this.table[line][collumn];\n  }\n  getBValue(line) {\n    return this.table[line][this.table[line].length - 1];\n  }\n  getTable() {\n    return this.table;\n  }\n  getStringTable() {\n    const table = [];\n    table.push(this.header);\n    const convertedTable = [];\n    this.table.map((line) => {\n      const convertedLine = [];\n      line.map((value) => {\n        convertedLine.push((Math.round(value * 100) / 100).toString());\n      });\n      convertedTable.push(convertedLine);\n    });\n    table.push(...convertedTable);\n    return table;\n  }\n  getBaseVariableCollumnIndex() {\n    let lowerValue = this.table[0][0];\n    let lowerValueIndex = 0;\n    for (let i = 1; i < this.table[0].length; i++) {\n      if (this.table[0][i] < lowerValue) {\n        lowerValue = this.table[0][i];\n        lowerValueIndex = i;\n      }\n    }\n    return lowerValueIndex;\n  }\n  getPivoLineIndex() {\n    let baseVariableCollumn = this.getBaseVariableCollumnIndex();\n    let lowerPositiveValueIndex = 1;\n    let lowerPositiveValue = this.getBValue(lowerPositiveValueIndex) / this.table[lowerPositiveValueIndex][baseVariableCollumn];\n    for (let i = 2; i < this.table.length; i++) {\n      let calculation = this.getBValue(i) / this.table[i][baseVariableCollumn];\n      if (calculation < lowerPositiveValue && calculation > 0 || lowerPositiveValue <= 0) {\n        lowerPositiveValue = calculation;\n        lowerPositiveValueIndex = i;\n      }\n    }\n    if (lowerPositiveValue < 0) {\n      lowerPositiveValueIndex = 0;\n    }\n    return lowerPositiveValueIndex;\n  }\n}\n", "export class SolutionList {\n  constructor(id, solution) {\n    this.solution = null;\n    this.isIndeterminate = false;\n    this.element = document.getElementById(id);\n    if (!this.element) {\n      throw new Error(`Table: no element was found with id '${id}'`);\n    }\n    this.list = document.createElement(\"div\");\n    this.list.classList.add(\"solution\");\n    this.element.append(this.list);\n    this.setSolution(solution);\n  }\n  createH4(text) {\n    let h4 = document.createElement(\"h4\");\n    let textElement = document.createTextNode(text);\n    h4.append(textElement);\n    return h4;\n  }\n  createList(content) {\n    let ul = document.createElement(\"ul\");\n    content.map((value) => {\n      let li = document.createElement(\"li\");\n      let text = document.createTextNode(`${value.variable}: ${value.value}`);\n      li.append(text);\n      ul.append(li);\n    });\n    return ul;\n  }\n  setSolution(solution) {\n    this.solution = solution;\n    this.list.innerText = \"\";\n    if (this.solution) {\n      this.render();\n    }\n  }\n  setIsIndeterminate(isIndeterminate) {\n    this.isIndeterminate = isIndeterminate;\n  }\n  render() {\n    this.list.innerText = \"\";\n    if (this.isIndeterminate)\n      this.list.append(this.createH4(\"SoluÃ§Ã£o Indeterminada\"));\n    this.list.append(this.createH4(\"VariÃ¡veis BÃ¡sicas\"));\n    this.list.append(this.createList(this.solution.basic));\n    this.list.append(this.createH4(\"VariÃ¡veis NÃ£o BÃ¡sicas\"));\n    this.list.append(this.createList(this.solution.notBasic));\n  }\n}\n", "export class Table {\n  constructor(id, content) {\n    this.element = document.getElementById(id);\n    if (!this.element) {\n      throw new Error(`Table: no element was found with id '${id}'`);\n    }\n    this.content = content;\n    this.table = document.createElement(\"table\");\n    const div = document.createElement(\"div\");\n    div.classList.add(\"table\");\n    div.append(this.table);\n    this.element.append(div);\n    this.render();\n  }\n  setContent(content) {\n    this.content = content;\n    this.render();\n  }\n  render() {\n    this.table.innerHTML = \"\";\n    const header = document.createElement(\"tr\");\n    this.content.shift()?.map((value) => {\n      const cell = document.createElement(\"th\");\n      cell.innerText = value;\n      header.append(cell);\n    });\n    this.table.append(header);\n    this.content.map((line) => {\n      const lineElement = document.createElement(\"tr\");\n      line.map((value) => {\n        const cell = document.createElement(\"td\");\n        cell.innerText = value;\n        lineElement.append(cell);\n      });\n      this.table.append(lineElement);\n    });\n  }\n}\n", "import {InputsManager} from \"./InputsManager.js\";\nimport {SimplexCalculator} from \"./SimpexCalculator.js\";\nimport {SimplexTable} from \"./SimplexTable.js\";\nimport {SolutionList} from \"./SolutionList.js\";\nimport {Table} from \"./Table.js\";\nconst inputsManager = new InputsManager(\"objective-function-input\", \"restrictions-input\");\nconst tableElement = new Table(\"result\", []);\nconst solutionListElement = new SolutionList(\"result\", null);\nconst solveButton = document.getElementById(\"solve\");\nsolveButton?.addEventListener(\"click\", (event) => {\n  const resultElement = document.getElementById(\"result\");\n  const simplexTable = new SimplexTable(inputsManager.getValues());\n  const simpexCalculator = new SimplexCalculator(simplexTable);\n  simpexCalculator.solve();\n  const result = simpexCalculator.getSimplexTable();\n  const solution = simpexCalculator.getSolution();\n  tableElement.setContent(result.getStringTable());\n  solutionListElement.setIsIndeterminate(!simpexCalculator.hasSolution());\n  solutionListElement.setSolution(solution);\n  resultElement?.classList.remove(\"none\");\n});\n"],
  "mappings": "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",
  "names": []
}
